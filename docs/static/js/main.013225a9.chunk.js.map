{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoType","PropTypes","func","isRequired","GifGridItem","id","title","url","className","src","alt","getGif","categoria","a","encodeURI","fetch","res","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KAmB9C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAyB/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,YCjC3B,IAAMC,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPHK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZN,EAFY,iDAEoCO,UAAUF,GAF9C,+DAGAG,MAAMR,GAHN,cAGZS,EAHY,gBAIGA,EAAIC,OAJP,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVvB,kBAcXY,GAdW,4CAAH,sDCINK,EAAU,SAAC,GAAmB,IAAjBZ,EAAgB,EAAhBA,UAAgB,ECDd,SAACA,GAAe,IAAD,EAEbzB,mBAAS,CAC/B+B,KAAM,GACNO,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAU,WAENjB,EAAOC,GACFiB,MAAK,SAAAR,GAAG,OAAIM,EAAS,CAClBT,KAAMG,EACNI,SAAS,SAGlB,CAACb,IAEGc,EDd2BI,CAAalB,GAAjCU,EAFwB,EAE9BJ,KAAcO,EAFgB,EAEhBA,QAEtB,OAEI,kBAAC,WAAD,KACI,wBAAIjB,UAAU,0CAA2CI,GAEvDa,EAAU,uBAAGjB,UAAU,gCAAb,cAA6D,KACzE,yBAAKA,UAAU,aAEPc,EAAOF,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eACIU,IAAMV,EAAIhB,IACNgB,UEfnBW,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,gBAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAS9B,OACI,kBAAC,WAAD,KACI,4CAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAE9B,6BACA,4BAEQ+C,EAAWb,KAAI,SAAAR,GAAS,OACpB,kBAAC,EAAD,CACImB,IAAOnB,EACPA,UAAYA,U,MCnBxCsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.013225a9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); \r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    ) \r\n}\r\n","export const getGif = async (categoria) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=B7rQd3ZZJHPqvP2jrDdPbN8s67ja4BII`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React, { Fragment } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h3 className=\"card animate__animated animate__fadeIn\">{ categoria }</h3>\r\n\r\n            { loading ? <p className=\"card animate__animated flash\">loading...</p> : null }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>    \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGif } from \"../../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        getGif(categoria)\r\n            .then(img => setState({\r\n                data: img,\r\n                loading: false\r\n            }))\r\n\r\n    }, [categoria])\r\n\r\n    return state\r\n};","import React, { Fragment, useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball'])\r\n\r\n    // const handleAgregar = () => {\r\n    //     const item = 'Naruto';\r\n    //     setCategorias(cats => [...cats, item])\r\n    // }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory setCategorias= { setCategorias }/>\r\n\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categorias.map(categoria => (\r\n                        <GifGrid \r\n                            key= { categoria }\r\n                            categoria={ categoria }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}